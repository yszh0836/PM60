源码来源高工LCD测试例程：
1：增加单个字母等的LCD显示，实现了不同字体，任意位置；
2：增加CM3的DSP LIB库实现cfft 128bit的浮点fft分析幅频/相频相应；


3：lib库不用keil的pack路径，而用CubeF1的包里面的lib库？------------------------------------ 0K
4：N不同及Fs不同的效果？
5：sin波形产生时用2048的幅值检验是否溢出，用matlab数据检验FFT？-----各个谐波取2048或者4096均OK
6：用matlab文件	Fs=6400 N=128	
		S11=Amp*sin(2*pi*50*t +40*pi/180)+ ...
  		Amp*sin(2*pi*1000*t -80*pi/180)+ ...
  		Amp*sin(2*pi*1500*t +170*pi/180)+1* Amp;
   产生的正弦波信号分析正确，不过在X轴的98 108 127三个点也有频谱线，这是因为频谱以64对称而已，实际
   中会剔除3200hz以上镜像无用部分。
   另外，Amp=2048也没问题。


6：Q15及Q31的效果，注意实数向Q15/Q31转换时注意的问题，即是否溢出？

7：远期验证RFFT到底为何不对的原因？
   经验证，发现是调用函数arm_rfft_fast_f32 (arm_rfft_fast_instance_f32 *S, float32_t *p, float32_t *pOut, uint8_t ifftFlag)
   时将最后一个参数ifftFlag错误写成了doBitReverse)。更改后正常，但是输出的复数队列顺序跟文档不一致，实际为：
   N=128时 ，频谱和相角都在相应的变量里面都是一个一个依次排列：AMP/Freq[0]-DC;AMP/Freq[1]-50Hz; ... AMP/Freq[n]-50*n Hz;
   N=256时 ，频谱和相角都在相应的变量里面都是 每2个  依次排列：AMP/Freq[0]-DC;AMP/Freq[2]-50Hz; ... AMP/Freq[2*n]-50*n Hz;
   N=512时 ，频谱和相角都在相应的变量里面都是 每4个  依次排列：AMP/Freq[0]-DC;AMP/Freq[4]-50Hz; ... AMP/Freq[4*n]-50*n Hz;
   N=1024时 ，频谱和相角都在相应的变量里面都是每8个  依次排列：AMP/Freq[0]-DC;AMP/Freq[8]-50Hz; ... AMP/Freq[8*n]-50*n Hz;
   2048点RAM太小，报错。64点FFT不准。
8：atan用查表实现？

注意事项：
1：arm_cfft_f32_app（N不同时幅度有不同，不管arm_sin还是matlab产生数据都有这个现象。相位等其他正确）
   幅度按照程序里固定的幅度归一化处理后，显示的幅度和真是幅度有比例关系，因此具体用时修改缩放因子
   N=64 时：FFT不准。
   N=128时：真实幅度是显示幅度	1 	倍。ok
   N=256时：真实幅度是显示幅度	2 	倍
   N=512时：真实幅度是显示幅度	4 	倍
   N=1024： 真实幅度是显示幅度	8 	倍

2：arm_rfft_f32_app（N不同时幅度/相位在输出变量的索引不是一个一个连续排列，不管arm_sin还是matlab产生数据都有这个现象。其他正常）
   N=64 时：FFT不准。
   N=128时 ，频谱和相角都在相应的变量里面都是一个一个依次排列：AMP/Freq[0]-DC;AMP/Freq[1]-50Hz; ... AMP/Freq[n]-50*n Hz;
   N=256时 ，频谱和相角都在相应的变量里面都是 每2个  依次排列：AMP/Freq[0]-DC;AMP/Freq[2]-50Hz; ... AMP/Freq[2*n]-50*n Hz;
   N=512时 ，频谱和相角都在相应的变量里面都是 每4个  依次排列：AMP/Freq[0]-DC;AMP/Freq[4]-50Hz; ... AMP/Freq[4*n]-50*n Hz;
   N=1024时 ，频谱和相角都在相应的变量里面都是每8个  依次排列：AMP/Freq[0]-DC;AMP/Freq[8]-50Hz; ... AMP/Freq[8*n]-50*n Hz;
   2048点RAM太小，报错。
   特别注意很多频谱估计被漏了，比如N=512时分配的输入输出buf都是512，但是频谱产生512个点，可是每四个点才有一个有用频谱，故
   此时需要的buf为512*4，有待验证。
3：arm_rfft_q15_app：
   a)切记q15变量取值范围：-32768 ~ +32767
       arm_sin_q15(x) ：-32768 ~ +32767，x范围：0~32767线性的对应着0-2PI.x超出范围arm_sin_q15无法返回；
  
   b)使用arm_rfft_q15时从matlab产生多次谐波时注意数值在-32768~32767之间，超出此范围自动转换，比如32768相当于-32768.。。；
                      幅值不能正确显示，缩小了比例，matlab得到单次谐波数据时缩小了4倍，其他情况需要继续验证。
   c)存在arm_rfft_f32_app一样的在输出buf变量里的索引地址不再是一对一的连续排列；
   d)由matlab产生待分析数据，用K个谐波最后数据还要除以K，防止超出Q15范围，切最后rfft后得到的幅值在c)条说明基础上又减小了K倍。
